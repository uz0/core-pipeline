name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run tests
      run: npm test

    - name: Run e2e tests
      run: npm run test:e2e

    - name: Generate test coverage
      run: npm run test:cov

    - name: Upload coverage reports
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage/

  build-and-push:
    name: Build and Push Docker Image
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    permissions:
      contents: read
      packages: write
    
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  update-helm-dev:
    name: Update Helm Values (Dev)
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Update dev values
      run: |
        IMAGE_TAG="${{ needs.build-and-push.outputs.image-tag }}"
        IMAGE_TAG=$(echo "$IMAGE_TAG" | head -n1 | sed 's/.*://')
        
        if [ -f "charts/core-pipeline/values-dev.yaml" ]; then
          sed -i "s|tag:.*|tag: ${IMAGE_TAG}|" charts/core-pipeline/values-dev.yaml
        fi
        
        echo "Updated image tag to: ${IMAGE_TAG}"

    - name: Commit and push changes
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        
        if git diff --quiet; then
          echo "No changes to commit"
        else
          git add charts/core-pipeline/values-dev.yaml || true
          git commit -m "chore: update dev image tag to ${{ github.sha }}"
          git push
        fi

  update-helm-prod:
    name: Update Helm Values (Prod)
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Update prod values
      run: |
        IMAGE_TAG="${{ needs.build-and-push.outputs.image-tag }}"
        IMAGE_TAG=$(echo "$IMAGE_TAG" | head -n1 | sed 's/.*://')
        
        if [ -f "charts/core-pipeline/values-prod.yaml" ]; then
          sed -i "s|tag:.*|tag: ${IMAGE_TAG}|" charts/core-pipeline/values-prod.yaml
        fi
        
        echo "Updated image tag to: ${IMAGE_TAG}"

    - name: Commit and push changes
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        
        if git diff --quiet; then
          echo "No changes to commit"
        else
          git add charts/core-pipeline/values-prod.yaml || true
          git commit -m "chore: update prod image tag to ${{ github.sha }}"
          git push
        fi

  security-scan:
    name: Security Scanning
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ needs.build-and-push.outputs.image-tag }}
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy results to GitHub Security
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'