name: Deploy to Testing

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Pull Request number to deploy'
        required: true
        type: number

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy-testing:
    name: Deploy PR to Testing
    runs-on: ubuntu-latest
    environment:
      name: testing
      url: https://test.core-pipeline.example.com
    
    permissions:
      contents: read
      packages: write
      pull-requests: read
    
    steps:
      - name: Get PR details
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ github.event.inputs.pr_number }}
            });
            core.setOutput('branch', pr.data.head.ref);
            core.setOutput('sha', pr.data.head.sha);
            return pr.data;
      
      - name: Checkout PR code
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.pr.outputs.sha }}
      
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=pr-${{ github.event.inputs.pr_number }}-{{sha}}
            type=raw,value=testing-latest
      
      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Checkout core-charts repository
        uses: actions/checkout@v4
        with:
          repository: uz0/core-charts
          token: ${{ secrets.GITHUB_TOKEN }}
          path: core-charts
      
      - name: Update Helm values for testing
        run: |
          cd core-charts
          IMAGE_TAG="pr-${{ github.event.inputs.pr_number }}-$(echo ${{ steps.pr.outputs.sha }} | cut -c1-7)"
          yq eval ".image.tag = \"${IMAGE_TAG}\"" -i charts/core-pipeline/values-test.yaml
          yq eval ".ingress.annotations.\"nginx.ingress.kubernetes.io/configuration-snippet\" = \"more_set_headers 'X-PR-Number: ${{ github.event.inputs.pr_number }}';\"" -i charts/core-pipeline/values-test.yaml
      
      - name: Commit and push Helm values
        run: |
          cd core-charts
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add charts/core-pipeline/values-test.yaml
          git commit -m "Deploy PR #${{ github.event.inputs.pr_number }} to testing" || echo "No changes to commit"
          git push || echo "Nothing to push"
      
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `ðŸš€ **Deployment to Testing Environment**
            
            PR #${{ github.event.inputs.pr_number }} has been deployed to the testing environment.
            
            - **Environment URL:** https://test.core-pipeline.example.com
            - **Docker Image:** \`${{ steps.meta.outputs.tags }}\`
            - **Commit SHA:** \`${{ steps.pr.outputs.sha }}\`
            
            The deployment will remain active until replaced by another PR deployment.`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.inputs.pr_number }},
              body: comment
            });