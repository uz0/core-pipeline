name: Deploy to Kubernetes

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - production
      branch:
        description: 'Branch to deploy (leave empty for current branch)'
        required: false
        default: ''

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image-tag: ${{ steps.meta.outputs.version }}
      image-digest: ${{ steps.build.outputs.digest }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_DATE=${{ steps.meta.outputs.created }}
            VCS_REF=${{ github.sha }}
            VERSION=${{ steps.meta.outputs.version }}

  deploy:
    name: Deploy to ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'Production' || 'Development') }}
    runs-on: ubuntu-latest
    needs: build-and-push
    environment:
      name: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'production' || 'development') }}
      url: ${{ (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production') || github.ref == 'refs/heads/main' && 'https://core-pipeline.theedgestory.org' || 'https://core-pipeline.dev.theedgestory.org' }}
    
    steps:
      - name: Checkout core-charts repository
        uses: actions/checkout@v4
        with:
          repository: uz0/core-charts
          token: ${{ secrets.CORE_CHARTS_PAT }}
          path: core-charts

      - name: Update Helm values
        run: |
          cd core-charts
          # Determine environment based on trigger type
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            ENVIRONMENT=${{ github.event.inputs.environment == 'production' && 'prod' || 'dev' }}
          else
            ENVIRONMENT=${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
          fi
          
          IMAGE_TAG="${{ needs.build-and-push.outputs.image-tag }}"
          
          # Update the image tag in values file
          yq eval ".image.tag = \"${IMAGE_TAG}\"" -i charts/core-pipeline/values-${ENVIRONMENT}.yaml
          
          # Show the changes
          echo "Updated values-${ENVIRONMENT}.yaml with image tag: ${IMAGE_TAG}"
          git diff

      - name: Commit and push changes
        run: |
          cd core-charts
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Determine environment based on trigger type
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            ENVIRONMENT=${{ github.event.inputs.environment == 'production' && 'prod' || 'dev' }}
            DEPLOY_TYPE="Manual"
          else
            ENVIRONMENT=${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
            DEPLOY_TYPE="Auto"
          fi
          
          IMAGE_TAG="${{ needs.build-and-push.outputs.image-tag }}"
          
          git add charts/core-pipeline/values-${ENVIRONMENT}.yaml
          git commit -m "[$DEPLOY_TYPE] Deploy core-pipeline to ${ENVIRONMENT}: ${IMAGE_TAG}" || echo "No changes to commit"
          git push